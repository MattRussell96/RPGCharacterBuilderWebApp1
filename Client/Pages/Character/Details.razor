@using Microsoft.AspNetCore.Authorization
@using RPGCharacterBuilderWebApp1.Shared.Models.Armor
@using RPGCharacterBuilderWebApp1.Shared.Models.Character
@using RPGCharacterBuilderWebApp1.Shared.Models.MagicItem
@using RPGCharacterBuilderWebApp1.Shared.Models.Weapon
@attribute [Authorize]
@inject HttpClient http
@page "/characters/{CharacterId:int}"

<h3>Character #@CharacterId</h3>

@if (Character != null)
{
    <div class="container">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <span>Character #@Character.Id</span>
                <span class="text-muted"><strong>@Character.ArmorName</strong></span>
                <span class="text-muted"><strong>@Character.WeaponName</strong></span>
                <span class="text-muted"><strong>@Character.MagicItemName</strong></span>
            </div>
            <div class="card-body">
                <h4 class="card-title">@Character.Name</h4>
                <p class="card-text">@Character.Health</p>
                <p class="card-text">@Character.Strength</p>
                <p class="card-text">@Character.Stamina</p>
                <p class="card-text">@Character.Speed</p>
                <p class="card-text">@Character.Mana</p>
            </div>
            <div class="card-footer text-muted d-flex justify-content-between">
                <span class="text-left">Created: @Character.CreatedUtc</span>
                @if (Character.ModifiedUtc != null)
                {
                    <span class="text-right">Modified: @Character.ModifiedUtc</span>
                }
            </div>
        </div>
        <div class="d-flex justify-content-center mt-3">
            <div class="text-center justify-content-between w-25">
                <a href=@($"/characters/edit/{Character.Id}") class="btn btn-outline-primary">Edit</a>
                <a href=@($"/characters/delete/{Character.Id}") class="btn btn-outline-danger">Delete</a>
                <hr />
                <a href="/characters">Back To Character Index</a>
            </div>
        </div>
    </div>
}
else
{
    <p>Loading...</p>
}

@code {
    [Parameter]
    public int CharacterId { get; set; }
    public CharacterDetail Character { get; set; }
    public ArmorDetail armors { get; set; }
    public WeaponDetail weapons { get; set; }
    public MagicItemDetail magicItems { get; set; }

    protected override async Task OnInitializedAsync()
    {
        Character = await http.GetFromJsonAsync<CharacterDetail>($"/api/characters/{CharacterId}");
        armors = await http.GetFromJsonAsync<ArmorDetail>("/api/armor/");
        weapons = await http.GetFromJsonAsync<WeaponDetail>("/api/weapons");
        magicItems = await http.GetFromJsonAsync<MagicItemDetail>("/api/magicitems");
    }
}
