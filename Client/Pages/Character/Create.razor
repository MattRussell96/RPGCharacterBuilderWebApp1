@page "/Character/Create"
@using Microsoft.AspNetCore.Authorization
@using RPGCharacterBuilderWebApp1.Shared.Models.Character
@attribute [Authorize]
@inject HttpClient http
@using RPGCharacterBuilderWebApp1.Shared.Models.Armor
@inject NavigationManager navigation

<h3>Create A Character</h3>

@if (errorMessage != null)
{
    <h5 class="text-danger">@errorMessage</h5>
}

@if (armors == null)
{
    <pm><em>Loading...</em></pm>
}
else
{
<div class="container">
    <EditForm Model="@model" OnValidSubmit="@HandleSubmit">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label>Name</label>
            <InputText class="form-control" @bind-Value="model.Name" />
        </div>
        <div class="form-group">
            <label>Health</label>
            <InputNumber class="form-control" @bind-Value="model.Health" />
        </div>
        <InputSelect class="form-control" @bind-Value="@model.ArmorId">
            @foreach (var armor in armors)
            {
                <option value="@armor.Id">@armor.Name</option>
            }
        </InputSelect>
        <button type="submit" class="btn btn-primary btn-block mt-5">Submit</button>
    </EditForm>
</div>
}
    
@code {
    private CharacterCreate model = new();
    private IEnumerable<ArmorListItem> armors;
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        armors = await http.GetFromJsonAsync<IEnumerable<ArmorListItem>>("/api/armor/");
    }

    private async void HandleSubmit()
    {
        var createRes = await http.PostAsJsonAsync<CharacterCreate>("/api/note", model);
        if (createRes.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/character");
        }
        else
        {
            errorMessage = "Could not create a character right now. Please try again later.";
        }
    }
}

